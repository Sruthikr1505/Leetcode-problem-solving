class RandomizedSet {
    private Map<Integer, Integer> valueToIndex; // Maps value to its index in the list
    private List<Integer> values; // Stores the values in the set
    private Random random; // Random number generator

    public RandomizedSet() {
        valueToIndex = new HashMap<>();
        values = new ArrayList<>();
        random = new Random();
    }
    
    public boolean insert(int val) {
        if (valueToIndex.containsKey(val)) {
            return false; // Value already exists
        }
        // Add to the list and map its index
        valueToIndex.put(val, values.size());
        values.add(val);
        return true;
    }
    
    public boolean remove(int val) {
        if (!valueToIndex.containsKey(val)) {
            return false; // Value does not exist
        }
        // Swap the element to be removed with the last element in the list
        int index = valueToIndex.get(val);
        int lastElement = values.get(values.size() - 1);
        values.set(index, lastElement); // Move the last element to the index
        valueToIndex.put(lastElement, index); // Update its index in the map
        
        // Remove the last element
        values.remove(values.size() - 1);
        valueToIndex.remove(val);
        return true;
    }
    
    public int getRandom() {
        // Generate a random index and return the value at that index
        int randomIndex = random.nextInt(values.size());
        return values.get(randomIndex);
    }
}
